This directory contains a spiking continuous attractor model of grid cells.
It contains a two population model, stellate cells (E) and fast spiking
interneurons (I), uniformly distributed on a twisted torus and connected to each
other.

Dependencies: python2.6, brian simulator (>= 1.3.1) and corresponding numpy and
              scipy packages


RUN the simulation by simply running python2.6 submit_simulation.
The output files are in the output/ directory.


File/Directory description:

    simulation.py
        Main simulation file, builds the model, runs the simulation and saves
        the data.

    submit_simulation.py
        A script to submit simulation run with specified parameters.
        Supports a generic workstation and a Sun Grid Engine system.

    grid_cell_network.py
        The base class for the model (connection weight definitions, interface).
        Simulator independent.

    grid_cell_network_brian.py
        Brian-specific version of the model



    gridcells_brian_demo/
        Demo version of the continuous attractor in asynchronous mode

    nest/
        Model for the NEST simulator implementation (work in progress)

    output/
        Simulation output directory

    LICENSE
        GNU GPL v3 license

    Makefile
        Packing and cleaning Makefile

    README
        This file

    Wavelets.py
        Continuous wavelet transform implementation (see license inside)

    cluster_submit.sh
        A helper script used on Sun GridEngine cluster systems

    common.py
        Basic routines common to all the simulations (submitting, parameter,
        manipulation, etc.)

    create_gridcells_demo.sh
        Script to produce a zipped version of the brian demo.

    custombrian.py
        Subclassed, model-specific classes derived from Brian

    data_analysis.py
        Generic data analysis functions

    default_params.py
        Default parameters definition (use these to customize your simulation)
        
    grid_cell_analysis.py
        Functions for grid-cell specific analysis (gridness-scores, etc.)

    grid_cell_network_nest.py
        NEST-specific version of the model (work in progress)

    hdf5_saver.py
        HDF5 manipulation routines.

    log.py
        Simple logging module.

    parameters.py
        Parameter parsing module used in simulations.

    place_cells.py
        Model of place cells (Poisson spikers).

    place_input.py
        Place cell current input used to stabilize the attractor state.

    rat_trajectory_lowpass.mat
        Preprocessed rat trajectories (adapted from http://www.ntnu.no/cbm/moser/gridcell)

    spike_analysis.py
        Spike analysis routines

    tools.py
        Generic data manipulation and analysis tools.

